#important note: id is important when using outputs,
#in this workflow we will see how to define and use outputs in same job and different jobs.
name: using outputs and needs
on: 
  workflow_dispatch:
    inputs:
      a1: 
        description: provide 1st integer
        required: true
        type: number
      a2:
        description: provide 2nd string
        required: true
        type: string

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs: 
      output1: ${{ steps.step1.outputs.test1 }}
      output2: ${{ steps.step2.outputs.test2 }}
      output3: ${{ steps.step3.outputs.test3 }}
    steps:
      - name: step1
        id: step1
        run: |
          echo "test1=hello" >> "$GITHUB_OUTPUT"
          
      - name: step2
        id:  step2
        run: |
          echo "test2=world" >> "$GITHUB_OUTPUT"
      
      - name: step3
        id: step3
        run: |
          x1=${{ fromJSON(github.event.inputs.a1) }}
          echo "test3=$x1" >> "$GITHUB_OUTPUT"
      - name: echo outputs
        run: |
          echo ${{steps.step1.outputs.test1}}
          echo ${{steps.step2.outputs.test2}}
          echo ${{steps.step3.outputs.test3}}
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps: 
      - run: |
          #the below code line will not print test1 because if you want to share data u need to use outputs
          # by using "needs" doesnot mean that u can acces all the things that are present in job1, it simply means
          #job2 will be run only when job1 is completed 
          echo "${{ needs.job1.outputs.test1 }} ${{ needs.job1.outputs.test2 }} ${{ needs.job1.outputs.test3 }}"
          echo "${{ needs.job1.outputs.output1 }}"
          echo "${{ needs.job1.outputs.output2 }}"
          echo "${{ needs.job1.outputs.output3 }}"
